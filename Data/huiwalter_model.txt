## Auto-generated Hui-Walter model created by runjags version 2.2.2-1.1 on 2023-10-26

model{

	## Observation layer:

	# Complete observations (N=110):
	for(p in 1:Populations){
		Tally_RR[1:4,p] ~ dmulti(prob_RR[1:4,p], N_RR[p])

		prob_RR[1:4,p] <- se_prob[1:4,p] + sp_prob[1:4,p]
	}


	## Observation probabilities:

	for(p in 1:Populations){

		# Probability of observing WipeResult- SwabResult- from a true positive::
		se_prob[1,p] <- prev[p] * ((1-se[1])*(1-se[2]) +covse12)
		# Probability of observing WipeResult- SwabResult- from a true negative::
		sp_prob[1,p] <- (1-prev[p]) * (sp[1]*sp[2] +covsp12)

		# Probability of observing WipeResult+ SwabResult- from a true positive::
		se_prob[2,p] <- prev[p] * (se[1]*(1-se[2]) -covse12)
		# Probability of observing WipeResult+ SwabResult- from a true negative::
		sp_prob[2,p] <- (1-prev[p]) * ((1-sp[1])*sp[2] -covsp12)

		# Probability of observing WipeResult- SwabResult+ from a true positive::
		se_prob[3,p] <- prev[p] * ((1-se[1])*se[2] -covse12)
		# Probability of observing WipeResult- SwabResult+ from a true negative::
		sp_prob[3,p] <- (1-prev[p]) * (sp[1]*(1-sp[2]) -covsp12)

		# Probability of observing WipeResult+ SwabResult+ from a true positive::
		se_prob[4,p] <- prev[p] * (se[1]*se[2] +covse12)
		# Probability of observing WipeResult+ SwabResult+ from a true negative::
		sp_prob[4,p] <- (1-prev[p]) * ((1-sp[1])*(1-sp[2]) +covsp12)

	}


	## Priors:

	# Prevalence in population 1:
	prev[1] ~ dbeta(1,1)

	# Prevalence in population 2:
	prev[2] ~ dbeta(1,1)


	# Sensitivity of WipeResult test:
	se[1] ~ dbeta(2,1)
	# Specificity of WipeResult test:
	sp[1] ~ dbeta(2,1)

	# Sensitivity of SwabResult test:
	se[2] ~ dbeta(2,1)
	# Specificity of SwabResult test:
	sp[2] ~ dbeta(2,1)


	# Covariance in sensitivity between WipeResult and SwabResult tests:
	# covse12 ~ dunif( (se[1]-1)*(1-se[2]) , min(se[1],se[2]) - se[1]*se[2] )  ## if the sensitivity of these tests may be correlated
	covse12 <- 0  ## if the sensitivity of these tests can be assumed to be independent
	# Calculated relative to the min/max for ease of interpretation:
	corse12 <- ifelse(covse12 < 0, -covse12 / ((se[1]-1)*(1-se[2])), covse12 / (min(se[1],se[2]) - se[1]*se[2]))

	# Covariance in specificity between WipeResult and SwabResult tests:
	# covsp12 ~ dunif( (sp[1]-1)*(1-sp[2]) , min(sp[1],sp[2]) - sp[1]*sp[2] )  ## if the specificity of these tests may be correlated
	covsp12 <- 0  ## if the specificity of these tests can be assumed to be independent
	# Calculated relative to the min/max for ease of interpretation:
	corsp12 <- ifelse(covsp12 < 0, -covsp12 / ((sp[1]-1)*(1-sp[2])), covsp12 / (min(sp[1],sp[2]) - sp[1]*sp[2]))

}

#monitor# se, sp, prev

## Inits:
inits{
"se" <- c(0.5, 0.99)
"sp" <- c(0.99, 0.75)
"prev" <- c(0.05, 0.95)
# "covse12" <- 0
# "covsp12" <- 0
}
inits{
"se" <- c(0.99, 0.5)
"sp" <- c(0.75, 0.99)
"prev" <- c(0.95, 0.05)
# "covse12" <- 0
# "covsp12" <- 0
}

## Data:
data{
"Populations" <- 2
"N_RR" <- c(30, 80)
"Tally_RR" <- structure(c(1, 3, 4, 22, 77, 3, 0, 0), .Dim = c(4, 2))
}

